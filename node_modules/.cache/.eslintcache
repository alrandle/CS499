[{"/home/daniel/CS499/src/index.js":"1","/home/daniel/CS499/src/Nav.js":"2","/home/daniel/CS499/src/reportWebVitals.js":"3","/home/daniel/CS499/src/pages/home.js":"4","/home/daniel/CS499/src/pages/layout.js":"5","/home/daniel/CS499/src/pages/login.js":"6","/home/daniel/CS499/src/pages/test.js":"7","/home/daniel/CS499/src/pages/register.js":"8","/home/daniel/CS499/src/pages/quiz_creator.js":"9","/home/daniel/CS499/src/pages/dashboard.js":"10","/home/daniel/CS499/src/pages/logout.js":"11","/home/daniel/CS499/src/pages/exam.js":"12"},{"size":694,"mtime":1670472825702,"results":"13","hashOfConfig":"14"},{"size":1228,"mtime":1670472825702,"results":"15","hashOfConfig":"14"},{"size":392,"mtime":1670472825702,"results":"16","hashOfConfig":"14"},{"size":881,"mtime":1670472825702,"results":"17","hashOfConfig":"14"},{"size":1682,"mtime":1670472825702,"results":"18","hashOfConfig":"14"},{"size":5543,"mtime":1670472825702,"results":"19","hashOfConfig":"14"},{"size":1385,"mtime":1670472825702,"results":"20","hashOfConfig":"14"},{"size":4403,"mtime":1670472825702,"results":"21","hashOfConfig":"14"},{"size":1637,"mtime":1670472825702,"results":"22","hashOfConfig":"14"},{"size":6058,"mtime":1670472825702,"results":"23","hashOfConfig":"14"},{"size":2174,"mtime":1670472825702,"results":"24","hashOfConfig":"14"},{"size":1817,"mtime":1670480825014,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hg44u4",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},"/home/daniel/CS499/src/index.js",[],[],"/home/daniel/CS499/src/Nav.js",[],[],"/home/daniel/CS499/src/reportWebVitals.js",[],[],"/home/daniel/CS499/src/pages/home.js",[],[],"/home/daniel/CS499/src/pages/layout.js",[],[],"/home/daniel/CS499/src/pages/login.js",[],["63"],"/home/daniel/CS499/src/pages/test.js",["64","65"],[],"/home/daniel/CS499/src/pages/register.js",["66"],[],"/home/daniel/CS499/src/pages/quiz_creator.js",[],[],"/home/daniel/CS499/src/pages/dashboard.js",["67","68","69","70","71"],[],"/home/daniel/CS499/src/pages/logout.js",[],[],"/home/daniel/CS499/src/pages/exam.js",["72","73"],[],"import React, { useState } from 'react';\nimport axios from 'axios';\n\nclass Exam extends React.Component{\n    state = {\n        quizID:'',\n        posts:[]\n    }\n\n    // Calls whenever the React Component mounts.\n    componentDidMount = () => {\n        this.state.quizID = localStorage.getItem('quizID')\n        this.getQuiz();\n      }\n\n\n    // Get a quiz\n    getQuiz = (id) => {\n        axios.get('http://localhost:8080/api/quiz/exam', {params:{quizID: id}})\n            .then((response) => {\n                const data = response.data;\n                this.setState({posts: data})\n                console.log(\"Data retrieved!\", data);\n            })\n            .catch((e) => {\n              console.log(\"Error!\", e)\n            })\n    }\n\n    // Returns a map of posts.\n    displayQuiz = (posts) => {\n        const map = posts.map((post, index) => (\n            <div id={index} key={index}>\n                <p>Q.{index+1}</p>\n                <div className='text-left d-flex'>\n                    <p className='align-center'>{post.title} | Uploaded: {post.date} | Creator: {post.creator}</p>\n                </div>\n            </div>\n            ));\n        return map;\n    }\n    \n\n    // Updates the state of the target.\n    handleEventUpdate = (event) => {\n        const target = event.target;\n        const name = target.name; \n        const value = target.value;\n    \n        this.setState({\n          [name]: value\n        })\n        console.log(this.state);\n      };\n\n\n    // Renders quiz\n    render(){;\n        const title = 'Test';\n        return(\n            \n            <div className='text-center text-white'>\n                <h1>{title}</h1>\n                <div>\n                    {this.displayQuiz(this.state.posts)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Exam;",{"ruleId":"74","severity":1,"message":"75","line":2,"column":17,"nodeType":"76","messageId":"77","endLine":2,"endColumn":25,"suppressions":"78"},{"ruleId":"74","severity":1,"message":"75","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"79","severity":1,"message":"80","line":34,"column":11,"nodeType":"81","endLine":34,"endColumn":77},{"ruleId":"74","severity":1,"message":"82","line":2,"column":10,"nodeType":"76","messageId":"77","endLine":2,"endColumn":21},{"ruleId":"74","severity":1,"message":"75","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"83","severity":1,"message":"84","line":40,"column":16,"nodeType":"85","messageId":"86","endLine":40,"endColumn":18},{"ruleId":"79","severity":1,"message":"87","line":59,"column":19,"nodeType":"81","endLine":59,"endColumn":91},{"ruleId":"74","severity":1,"message":"88","line":100,"column":15,"nodeType":"76","messageId":"77","endLine":100,"endColumn":17},{"ruleId":"83","severity":1,"message":"84","line":111,"column":41,"nodeType":"85","messageId":"86","endLine":111,"endColumn":43},{"ruleId":"74","severity":1,"message":"75","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"89","severity":1,"message":"90","line":12,"column":9,"nodeType":"91","messageId":"92","endLine":12,"endColumn":19},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["93"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useNavigate' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'id' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation",{"kind":"94","justification":"95"},"directive",""]