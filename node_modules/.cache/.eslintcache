[{"/home/daniel/CS499/src/index.js":"1","/home/daniel/CS499/src/Nav.js":"2","/home/daniel/CS499/src/reportWebVitals.js":"3","/home/daniel/CS499/src/pages/home.js":"4","/home/daniel/CS499/src/pages/layout.js":"5","/home/daniel/CS499/src/pages/login.js":"6","/home/daniel/CS499/src/pages/test.js":"7","/home/daniel/CS499/src/pages/register.js":"8","/home/daniel/CS499/src/pages/quiz_creator.js":"9","/home/daniel/CS499/src/pages/dashboard.js":"10","/home/daniel/CS499/src/pages/logout.js":"11"},{"size":654,"mtime":1670305809393,"results":"12","hashOfConfig":"13"},{"size":1056,"mtime":1670364168402,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1669784186014,"results":"15","hashOfConfig":"13"},{"size":813,"mtime":1670363799258,"results":"16","hashOfConfig":"13"},{"size":1687,"mtime":1670364030114,"results":"17","hashOfConfig":"13"},{"size":4561,"mtime":1670380608330,"results":"18","hashOfConfig":"13"},{"size":1346,"mtime":1670379349290,"results":"19","hashOfConfig":"13"},{"size":3851,"mtime":1670380686714,"results":"20","hashOfConfig":"13"},{"size":1611,"mtime":1670377641346,"results":"21","hashOfConfig":"13"},{"size":4700,"mtime":1670374407038,"results":"22","hashOfConfig":"13"},{"size":1737,"mtime":1670365446482,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hg44u4",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},"/home/daniel/CS499/src/index.js",[],[],"/home/daniel/CS499/src/Nav.js",[],[],"/home/daniel/CS499/src/reportWebVitals.js",[],[],"/home/daniel/CS499/src/pages/home.js",[],[],"/home/daniel/CS499/src/pages/layout.js",[],[],"/home/daniel/CS499/src/pages/login.js",[],["60"],"/home/daniel/CS499/src/pages/test.js",["61","62"],[],"import React, { useState } from 'react';\nimport axios from 'axios';\n\n\n\nclass Test extends React.Component{\n    state = {\n        posts:[]\n    }\n\n  //Calls whenever the React Component mounts.\n  componentDidMount = () => {\n    this.getQuizes();\n  }\n\n  getQuizes = () => {\n      axios.get('http://localhost:8080/api/quiz/exam')\n          .then((response) => {\n              const data = response.data;\n              this.setState({posts: data})\n              console.log(\"Data retrieved!\");\n          })\n          .catch((e) => {\n            console.log(\"Error!\", e)\n          })\n  }\n\n  displayQuizes = (posts) => {\n      if (!posts.length){return null;}\n      \n      return posts.map((post, index) => (\n        <div key={index}>\n          <a href='' className='d-flex btn btn-dark justify-left text-left'>\n            <div className='align-center text-left d-flex'>\n              <p className='align-center'>{post.title} | Uploaded: {post.date} | Creator: {post.creator}</p>\n            </div>\n          </a>\n        </div>\n      ));\n  };\n\n  handleEventUpdate = (event) => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n\n    this.setState({\n      [name]: value\n    })\n\n  };\n\n  render(){\n    return(\n      <div className='text-center text-white'>\n      </div>\n    )\n  }\n    \n}\n\nexport default Test;","/home/daniel/CS499/src/pages/register.js",["63"],[],"/home/daniel/CS499/src/pages/quiz_creator.js",[],[],"/home/daniel/CS499/src/pages/dashboard.js",["64","65","66","67"],[],"import React, { useState } from 'react';\nimport axios from 'axios';\n\nclass Dashboard extends React.Component{\n    state = {\n        posts:[]\n    }\n\n    //Calls whenever the React Component mounts.\n    componentDidMount = () => {\n      this.getQuizes();\n    }\n\n    getQuizes = () => {\n        axios.get('http://localhost:8080/api/quiz/selection')\n            .then((response) => {\n                const data = response.data;\n                this.setState({posts: data})\n                console.log(\"Data retrieved!\");\n            })\n            .catch((e) => {\n              console.log(\"Error!\", e)\n            })\n    }\n\n    displayQuizes = (posts) => {\n        if (!posts.length){return null;}\n        \n        return posts.map((post, index) => (\n          <div key={index}>\n            <a href='' className='d-flex btn btn-dark justify-left text-left'>\n              <div className='align-center text-left d-flex'>\n                <p className='align-center'>{post.title} | Uploaded: {post.date} | Creator: {post.creator}</p>\n                <input\n                    type='hidden'\n                    name={post._id}\n                />\n              </div>\n            </a>\n          </div>\n        ));\n    };\n\n    handleEventUpdate = (event) => {\n        const target = event.target;\n        const name = target.name;\n        const value = target.value;\n    \n        this.setState({\n          [name]: value\n        })\n    \n      };\n\n\n    render(){\n        //React.useLayoutEffect(() => {\n        //    NavigationPreloadManager.setOptions({headerShown: false});\n        //});\n        // the above code could be used in some way to remove the nav bar from the top of the page\n\n        if(localStorage.getItem('firstname') == null || localStorage.getItem('lastname') == null){\n          return (\n            <div className='text-center text-white'>\n              <h1>Dashboard</h1>\n              <code>Error! You must be logged in to do that!</code>\n              <div>\n                <a href='/login' className='btn text-white btn-outline'>Return to login</a>\n              </div>\n            </div>\n          )};\n        \n        const id = localStorage.getItem('id');\n        const name = localStorage.getItem('firstname') + \" \" + localStorage.getItem('lastname'); \n        const username = localStorage.getItem('username');\n        const email = localStorage.getItem('email');\n        const role = localStorage.getItem('role');\n        \n        /* Realisitcally this should get verified with a server session variable\n         * So that someone cannot go in and change their role on the local end and \n         * gain unauthorized access. This is just here as proof of concept for now\n         */\n        if(localStorage.getItem('role') == 'admin'){\n          return (\n            <>\n            <div className='text-center text-white'>\n                <h1>Dashboard</h1>\n                <br></br>\n                <br></br>\n                <div className='d-flex'>\n                    <div className='w-25'>\n                        <h3>Welcome Back</h3>\n                        <p>{name}</p>\n                        <p>usrnm: {username}</p>\n                        <p>email: {email}</p>\n                        <p>Role: <code>{role}</code></p>\n                        \n                        \n                        <a href='/quiz-creator' className='btn btn-secondary'>Create A Quiz</a>\n                        <a href='/analytics' className='btn btn-secondary'>Quiz Analytics/Grades</a>\n                    </div>\n                    <div className='w-100'>\n                        <h3>All Quizes</h3>\n                        <div className='quizs'>\n                        {this.displayQuizes(this.state.posts)}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            </>\n        );\n        }else{\n          return (\n            <>\n            <div className='text-center text-white'>\n                <h1>Dashboard</h1>\n                <br></br>\n                <br></br>\n                <div className='d-flex'>\n                    <div className='w-25'>\n                        <h3>Welcome Back</h3>\n                        <p>{name}</p>\n                        <p>usrnm: {username}</p>\n                        <p>email: {email}</p>\n                    </div>\n                    <div className='w-100'>\n                        <h3>All Quizes</h3>\n                        <div className='quizs'>\n                        {this.displayQuizes(this.state.posts)}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            </>\n        );\n        }\n    }\n}\n\nexport default Dashboard;","/home/daniel/CS499/src/pages/logout.js",["68"],[],"// eslint-disable-next-line\nimport React from 'react';\nimport axios from 'axios';\n\nclass Logout extends React.Component{\n\n  render(){\n    return(\n      <div>logout page </div>\n    );\n  }\n  /*\n  return (\n    <div className='text-center text-white'>\n      <div className='form'>\n        \n        {isSubmitted ? <div>User is successfully logged in</div> : pageForm}\n      </div>\n    </div>\n  );*/\n}\n\n\nexport default Logout;\n\n/**\n *  const handleSubmit = (event) =>{ // use this to handle the submission from the form\n    event.preventDefault() //don't touch this\n    var { uname, pass } = document.forms[0];\n    console.log(uname, pass) // need to delete this in the final review\n    //find user --> this will change with database connection\n    const userData = database.find((user) => user.username === uname.value);\n\n    if (userData) { //shouldn't need to change this\n      if (userData.password !== pass.value){\n        setErrorMessages({name: \"pass\", message: \"Not a valid Password\"})\n      }else {\n        setIsSubmitted(true);\n        if(setIsSubmitted){ // set roll page\n          if(userData.roll === \"admin\"){\n            setTimeout(() => {\n              window.open('teacher', \"_self\")\n            }, 3000);\n          } else if(userData.roll === \"user\"){\n            setTimeout(() => {\n              window.open('student', \"_self\")\n            }, 3000);\n          } else {\n            setTimeout(() => {\n              window.open('/', \"_self\")\n            }, 3000);\n          }\n        }\n      }\n    } else{\n      setErrorMessages({name: \"uname\", message: \"Not a valid Username\"})\n    }\n  }\nconst renderErrorMessage = (name) =>\n  name === errorMessages.name && (\n    <div className='error'>{errorMessages.message}</div>\n  );\n */",{"ruleId":"69","severity":1,"message":"70","line":2,"column":17,"nodeType":"71","messageId":"72","endLine":2,"endColumn":25,"suppressions":"73"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"74","severity":1,"message":"75","line":33,"column":11,"nodeType":"76","endLine":33,"endColumn":77},{"ruleId":"69","severity":1,"message":"77","line":2,"column":10,"nodeType":"71","messageId":"72","endLine":2,"endColumn":21},{"ruleId":"69","severity":1,"message":"70","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"74","severity":1,"message":"75","line":31,"column":13,"nodeType":"76","endLine":31,"endColumn":79},{"ruleId":"69","severity":1,"message":"78","line":73,"column":15,"nodeType":"71","messageId":"72","endLine":73,"endColumn":17},{"ruleId":"79","severity":1,"message":"80","line":83,"column":41,"nodeType":"81","messageId":"82","endLine":83,"endColumn":43},{"ruleId":"69","severity":1,"message":"83","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":13},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["84"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useNavigate' is defined but never used.","'id' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'axios' is defined but never used.",{"kind":"85","justification":"86"},"directive",""]